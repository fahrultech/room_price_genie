services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    entrypoint: ["/app/src/entrypoint.sh"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/roompricegenie_db
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s      

  db:
    image: postgres:15-bullseye
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/  # This volume will persist data

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    command: celery -A roompricegenie worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web

  celery_beat:
    build: .
    #command: celery -A roompricegenie beat --loglevel=info
    command: ["/app/wait-for-it.sh", "web:8000", "--", "celery", "-A", "roompricegenie", "beat", "--loglevel=info"]
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web

volumes:
  postgres_data:
    external: false
